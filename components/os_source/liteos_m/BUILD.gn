# Copyright (c) 2013-2019 Huawei Technologies Co., Ltd. All rights reserved.
# Copyright (c) 2020-2021 Huawei Device Co., Ltd. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without modification,
# are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this list of
#    conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice, this list
#    of conditions and the following disclaimer in the documentation and/or other materials
#    provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its contributors may be used
#    to endorse or promote products derived from this software without specific prior written
#    permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

import("config.gni")

group("kernel") {
  deps = [
    "kernel:kernel",
    "utils:utils",
    "//third_party/bounds_checking_function:libsec_static",
  ]
  if (enable_ohos_kernel_liteos_m_cppsupport == true) {
    deps += [ "components/cppsupport:cppsupport" ]
  }
  if (enable_ohos_kernel_liteos_m_cpup == true) {
    deps += [ "components/cpup:cpup" ]
  }
  if (enable_ohos_kernel_liteos_m_exchook == true) {
    deps += [ "components/exchook:exchook" ]
  }
  if (enable_ohos_kernel_liteos_m_backtrace == true) {
    deps += [ "components/backtrace:backtrace" ]
  }
  if (enable_ohos_kernel_liteos_m_fs == true) {
    deps += [ "components/fs:fs" ]
  }
  if (enable_ohos_kernel_liteos_m_pm == true) {
    deps += [ "components/power:pm" ]
  }
  if (enable_ohos_kernel_liteos_m_kal == true) {
    deps += [ "kal:kal" ]
  }
  if (enable_ohos_kernel_liteos_m_shell== true) {
    deps += [ "components/shell:shell" ]
  }
  if (enable_ohos_kernel_liteos_m_test == true) {
    deps += [ "testsuits:test" ]
  }
  if (enable_ohos_kernel_liteos_m_lwip == true) {
    deps += [ ohos_kernel_liteos_m_lwip_path ]
  }
}
