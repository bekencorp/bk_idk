.. _project_import_gnu_makefile_project_1:

Import GNU Makefile Project 1
==============================================

Overview
--------------------------

If you have a component not written using cmake, for example, your component is written in a GNU Makefile, and you want to use this component in ARMINO, but you don't want to rewrite the component build to CMake. In this case, you need to use the ExternalProject function of CMake.

Example to import a foo component written with a Makefile into the c1 component::

    # External build process for foo, run in the source directory
    # and generate libfoo.a
    externalproject_add(foo_build
        PREFIX ${COMPONENT_DIR}
        SOURCE_DIR ${COMPONENT_DIR}/foo
        CONFIGURE_COMMAND ""
        BUILD_IN_SOURCE 1
        BUILD_COMMAND make CC=${CMAKE_C_COMPILER} libfoo.a
        INSTALL_COMMAND ""
        )

    # Add libfoo.a to the build system
    add_library(foo STATIC IMPORTED GLOBAL)
    add_dependencies(foo foo_build)

    set_target_properties(foo PROPERTIES IMPORTED_LOCATION
        ${COMPONENT_DIR}/foo/libfoo.a)
    set_target_properties(foo PROPERTIES INTERFACE_INCLUDE_DIRECTORIES
        ${COMPONENT_DIR}/foo/include)

    set_directory_properties( PROPERTIES ADDITIONAL_MAKE_CLEAN_FILES
        "${COMPONENT_DIR}/foo/libfoo.a")

（The above CMakeLists.txt can be used to create a component named ``foo`` that builds libfoo.a with its own Makefile.）

- ``externalproject_add`` defines an external build system.

  - Set ``SOURCE_DIR``, ``CONFIGURE_COMMAND``, ``BUILD_COMMAND`` and ``INSTALL_COMMAND``.If the external build system does not configure this step, ``CONFIGURE_COMMAND`` can be set to an empty string.In Armino's build system, the ``INSTALL_COMMAND`` variable is generally set to empty.
  - Set ``BUILD_IN_SOURCE``,i.e. the build directory is the same as the source directory. Otherwise,you can also set the ``BUILD_DIR`` variable.
  - See `ExternalProject_Add`_ for details on the ``externalproject_add()`` command.

- The second set of commands adds a target library that points to the library files generated by the external build system. In order to add the include directory and tell CMake where the file is, some more properties need to be set.
- Finally, the generated library is added to `ADDITIONAL_MAKE_CLEAN_FILES`_ . That is, the library will be removed after ``make clean`` is executed. Note that other object files in the build system are not removed.

:example:`example <build_system/111_use_gnu_make_project1>`

.. _ExternalProject_Add: https://cmake.org/cmake/help/latest/module/ExternalProject.html
.. _ADDITIONAL_MAKE_CLEAN_FILES: https://cmake.org/cmake/help/latest/prop_dir/ADDITIONAL_MAKE_CLEAN_FILES.html
